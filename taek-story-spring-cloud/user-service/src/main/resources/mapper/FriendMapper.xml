<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.userservice.mapper.FriendMapper">

    <select id="friendsByUserSeq" resultType="friends">
        /** friendsByUserSeq    */
        select  user1_seq
            ,   user2_seq
            ,   status

            ,   crt_dt
            ,   crt_ip
            ,   crt_seq
            ,   udt_dt
            ,   udt_ip
            ,   udt_seq
        from    friends
        where   1=1
        and status   =   'accepted'
        and (user1_seq   =   #{userSeq} or  user2_seq   =   #{userSeq})
        order by    user1_seq,  user2_seq
    </select>

    <select id="friendUserSeqsByUserSeq" resultType="java.lang.Long">
        /** friendUserSeqsByUserSeq */
        select  a.seq
        from    (
            select  user1_seq   as  seq
            from    friends
            where   1=1
            and status   =   'accepted'
            and user2_seq   =   #{userSeq}
            union
            select  user2_seq   as  seq
            from    friends
            where   1=1
            and status   =   'accepted'
            and user1_seq   =   #{userSeq}
        )   a
        order by    a.seq   asc
    </select>

    <select id="friends" resultType="friendUser">
        /** search  */
        /** search  */
        select  t1.*
        from    (
            select  a.seq
                ,   a.email
                ,   a.nickname
                ,   a.birth
                ,   a.phone
                ,   a.file_profile_seq
                ,   a.file_profile_status

                ,   (
                    case
                    when    a.seq = #{userSeq}
                    then    'me'
                    when    (
                        select count(1)
                        from friends b
                        where 1=1
                        and (
                            (b.user1_seq = a.seq and b.user2_seq = #{userSeq})
                            or
                            (b.user1_seq = #{userSeq} and b.user2_seq = a.seq)
                        )
                        and b.status = 'accepted'
                    ) &gt; 0
                    then    'friend'
                    when    (
                        select count(1)
                        from friends b
                        where 1=1
                        and (
                            (b.user1_seq = a.seq and b.user2_seq = #{userSeq})
                            or
                            (b.user1_seq = #{userSeq} and b.user2_seq = a.seq)
                        )
                        and b.status = 'rejected'
                    ) &gt; 0
                    then    'rejected'
                    when    (
                        select count(1)
                        from friends b
                        where (b.user1_seq = #{userSeq} and b.user2_seq = a.seq)
                        and b.status = 'requested'
                    ) &gt; 0
                    then    'requested'
                    when    (
                        select count(1)
                        from friends b
                        where (b.user1_seq = a.seq and b.user2_seq = #{userSeq})
                        and b.status = 'requested'
                    ) &gt; 0
                    then    'received'
                    else    ''
                    end
                )  as  friend_status

                ,   a.crt_dt
                ,   a.crt_ip
                ,   a.crt_seq
                ,   a.udt_dt
                ,   a.udt_ip
                ,   a.udt_seq
            from    users   a
        )  t1
        where   1=1
        and t1.friend_status != ''
        order by    (
            case    t1.friend_status
            when    'received'
            then    1
            when    'friend'
            then    2
            when    'requested'
            then    3
            when    'rejected'
            then    4
            when    'me'
            then    9999
            else    99
            end
        )
            ,   t1.nickname   asc
    </select>

    <select id="search" resultType="friendUser">
        /** search  */
        select  t1.*
        from    (
            select  a.seq
                ,   a.email
                ,   a.nickname
                ,   a.birth
                ,   a.phone
                ,   a.file_profile_seq
                ,   a.file_profile_status

                ,   (
                    case
                    when    a.seq = #{userSeq}
                    then    'me'
                    when    (
                        select count(1)
                        from friends b
                        where 1=1
                        and (
                            (b.user1_seq = a.seq and b.user2_seq = #{userSeq})
                            or
                            (b.user1_seq = #{userSeq} and b.user2_seq = a.seq)
                        )
                        and b.status = 'accepted'
                    ) &gt; 0
                    then    'friend'
                    when    (
                        select count(1)
                        from friends b
                        where 1=1
                        and (
                            (b.user1_seq = a.seq and b.user2_seq = #{userSeq})
                            or
                            (b.user1_seq = #{userSeq} and b.user2_seq = a.seq)
                        )
                        and b.status = 'rejected'
                    ) &gt; 0
                    then    'rejected'
                    when    (
                        select count(1)
                        from friends b
                        where (b.user1_seq = #{userSeq} and b.user2_seq = a.seq)
                        and b.status = 'requested'
                    ) &gt; 0
                    then    'requested'
                    when    (
                        select count(1)
                        from friends b
                        where (b.user1_seq = a.seq and b.user2_seq = #{userSeq})
                        and b.status = 'requested'
                    ) &gt; 0
                    then    'received'
                    else    ''
                    end
                )  as  friend_status

                ,   a.crt_dt
                ,   a.crt_ip
                ,   a.crt_seq
                ,   a.udt_dt
                ,   a.udt_ip
                ,   a.udt_seq
            from    users   a
            where   1=1
            <if test="keyword != null and keyword != ''">
                and (
                    upper( a.email )    like    concat('%', upper(#{keyword}), '%')
                    or
                    upper( a.nickname )    like    concat('%', upper(#{keyword}), '%')
                )
            </if>
        )  t1
        order by    (
            case    t1.friend_status
            when    'received'
            then    1
            when    'friend'
            then    2
            when    'requested'
            then    3
            when    'rejected'
            then    4
            when    'me'
            then    9999
            else    99
            end
        )
            ,   t1.nickname   asc
    </select>

    <insert id="request">
        /** request */
        insert into friends (user1_seq, user2_seq, status, crt_dt, crt_ip, crt_seq)
        values (#{userSeq1}, #{userSeq2}, 'requested', CURRENT_TIMESTAMP, #{ip}, #{userSeq1})
    </insert>

    <update id="accept">
        /** accept  */
        update friends
        set status  =   'accepted'
        ,   udt_dt  =   CURRENT_TIMESTAMP
        ,   udt_ip  =    #{ip}
        ,   udt_seq  =    #{userSeq1}
        where 1=1
        and user1_seq   =   #{userSeq2}
        and user2_seq   =   #{userSeq1}
    </update>

    <update id="reject">
        /** reject  */
        update friends
        set status  =   'rejected'
        ,   udt_dt  =   CURRENT_TIMESTAMP
        ,   udt_ip  =    #{ip}
        ,   udt_seq  =    #{userSeq1}
        where 1=1
        and user1_seq   =   #{userSeq2}
        and user2_seq   =   #{userSeq1}
    </update>

</mapper>


