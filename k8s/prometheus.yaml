# How to re-create (kubectl):
#   kubectl delete -f prometheus.yaml --ignore-not-found
#   kubectl apply  -f prometheus.yaml
#   kubectl get deploy prometheus
#   kubectl get svc prometheus
#
# Rollout / 이미지 교체 재배포:
#   kubectl rollout restart deploy/prometheus
#   kubectl rollout status deploy/prometheus
#   kubectl rollout undo deploy/prometheus

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'kubernetes-services'
        metrics_path: /actuator/prometheus
        static_configs:
          - targets:
              - 'user-service:90'
              - 'file-service:90'
              - 'posting-service:90'
              - 'notification-service:90'

      # kube-state-metrics: Kubernetes 리소스 상태/요청/리미트 메트릭
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets:
              - 'kube-state-metrics:8080'

      # kubelet: 노드/Pod 레벨 메트릭 (/metrics)
      - job_name: 'kubelet'
        scheme: https
        kubernetes_sd_configs:
          - role: node
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):\d+'
            target_label: __address__
            replacement: '$1:10250'

      # cAdvisor: 컨테이너 CPU/메모리 메트릭 (/metrics/cadvisor)
      - job_name: 'cadvisor'
        scheme: https
        metrics_path: /metrics/cadvisor
        kubernetes_sd_configs:
          - role: node
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):\d+'
            target_label: __address__
            replacement: '$1:10250'

      # node-exporter: 노드 OS 메트릭
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: keep
            source_labels: [__meta_kubernetes_service_label_app]
            regex: node-exporter
          - action: keep
            source_labels: [__meta_kubernetes_endpoint_port_name]
            regex: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      initContainers:
        - name: tsdb-lock-clean
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "rm -f /prometheus/lock || true"]
          volumeMounts:
            - name: prometheus-data
              mountPath: /prometheus
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          imagePullPolicy: IfNotPresent
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      nodePort: 30111




