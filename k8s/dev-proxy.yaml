# How to re-create (kubectl) from k8s folder
#   kubectl delete -f dev-proxy.yaml --ignore-not-found
#   kubectl apply  -f dev-proxy.yaml
#   kubectl get deploy dev-proxy
#   kubectl get svc dev-proxy -o wide
#   curl -i http://localhost:32290/user-service/test

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-proxy-nginx-conf
data:
  default.conf: |
    server {
      listen 80;
      server_name _;

      # /user-service/<anything> -> http://host.docker.internal:90/<anything>
      location ~ ^/user-service(/|$)(.*) {
        # rewrite first to avoid variables in proxy_pass (no resolver needed)
        rewrite ^/user-service(/|$)(.*) /$2 break;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://host.docker.internal:90;
      }

      # Add more mappings here following the same pattern
      # Example: /post-service -> host.docker.internal:18080
      # location ~ ^/post-service(/|$)(.*) {
      #   rewrite ^/post-service(/|$)(.*) /$2 break;
      #   proxy_pass http://host.docker.internal:18080;
      # }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dev-proxy
  template:
    metadata:
      labels:
        app: dev-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:1.27-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: nginx-conf
          configMap:
            name: dev-proxy-nginx-conf

---
apiVersion: v1
kind: Service
metadata:
  name: dev-proxy
spec:
  type: NodePort
  selector:
    app: dev-proxy
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 32290


